using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;

namespace OpenGl
{
	public enum BlendingFactorDest
	{
		// GL_ZERO = 0x0
		Zero = unchecked((int)0),
		// GL_ONE = 0x1
		One = unchecked((int)1),
		// GL_SRC_COLOR = 0x300
		SrcColor = unchecked((int)768),
		// GL_ONE_MINUS_SRC_COLOR = 0x301
		OneMinusSrcColor = unchecked((int)769),
		// GL_SRC_ALPHA = 0x302
		SrcAlpha = unchecked((int)770),
		// GL_ONE_MINUS_SRC_ALPHA = 0x303
		OneMinusSrcAlpha = unchecked((int)771),
		// GL_DST_ALPHA = 0x304
		DstAlpha = unchecked((int)772),
		// GL_ONE_MINUS_DST_ALPHA = 0x305
		OneMinusDstAlpha = unchecked((int)773),
		// GL_CONSTANT_COLOR_EXT = 0x8001
		ConstantColor = unchecked((int)32769),
		// GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002
		OneMinusConstantColor = unchecked((int)32770),
		// GL_CONSTANT_ALPHA_EXT = 0x8003
		ConstantAlpha = unchecked((int)32771),
		// GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004
		OneMinusConstantAlpha = unchecked((int)32772),
	}
	public enum BlendingFactorSrc
	{
		// GL_ZERO = 0x0
		Zero = unchecked((int)0),
		// GL_ONE = 0x1
		One = unchecked((int)1),
		// GL_SRC_ALPHA = 0x302
		SrcAlpha = unchecked((int)770),
		// GL_ONE_MINUS_SRC_ALPHA = 0x303
		OneMinusSrcAlpha = unchecked((int)771),
		// GL_DST_ALPHA = 0x304
		DstAlpha = unchecked((int)772),
		// GL_ONE_MINUS_DST_ALPHA = 0x305
		OneMinusDstAlpha = unchecked((int)773),
		// GL_DST_COLOR = 0x306
		DstColor = unchecked((int)774),
		// GL_ONE_MINUS_DST_COLOR = 0x307
		OneMinusDstColor = unchecked((int)775),
		// GL_SRC_ALPHA_SATURATE = 0x308
		SrcAlphaSaturate = unchecked((int)776),
		// GL_CONSTANT_COLOR_EXT = 0x8001
		ConstantColor = unchecked((int)32769),
		// GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002
		OneMinusConstantColor = unchecked((int)32770),
		// GL_CONSTANT_ALPHA_EXT = 0x8003
		ConstantAlpha = unchecked((int)32771),
		// GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004
		OneMinusConstantAlpha = unchecked((int)32772),
	}
	public enum Boolean
	{
		// GL_FALSE = 0x0
		False = unchecked((int)0),
		// GL_TRUE = 0x1
		True = unchecked((int)1),
	}
	public enum ClearBufferMask
	{
		// GL_DEPTH_BUFFER_BIT = 0x100
		DepthBufferBit = unchecked((int)256),
		// GL_ACCUM_BUFFER_BIT = 0x200
		AccumBufferBit = unchecked((int)512),
		// GL_STENCIL_BUFFER_BIT = 0x400
		StencilBufferBit = unchecked((int)1024),
		// GL_COLOR_BUFFER_BIT = 0x4000
		ColorBufferBit = unchecked((int)16384),
		// GL_COVERAGE_BUFFER_BIT_NV = 0x8000
		CoverageBufferBit = unchecked((int)32768),
	}
	public enum ClientAttribMask
	{
		// GL_CLIENT_PIXEL_STORE_BIT = 0x1
		ClientPixelStoreBit = unchecked((int)1),
		// GL_CLIENT_VERTEX_ARRAY_BIT = 0x2
		ClientVertexArrayBit = unchecked((int)2),
		// GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF
		ClientAllAttribBits = unchecked((int)4294967295),
	}
	public enum ColorPointerType
	{
		// GL_BYTE = 0x1400
		Byte = unchecked((int)5120),
		// GL_UNSIGNED_BYTE = 0x1401
		UnsignedByte = unchecked((int)5121),
		// GL_SHORT = 0x1402
		Short = unchecked((int)5122),
		// GL_UNSIGNED_SHORT = 0x1403
		UnsignedShort = unchecked((int)5123),
		// GL_INT = 0x1404
		Int = unchecked((int)5124),
		// GL_UNSIGNED_INT = 0x1405
		UnsignedInt = unchecked((int)5125),
		// GL_FLOAT = 0x1406
		Float = unchecked((int)5126),
		// GL_DOUBLE = 0x140A
		Double = unchecked((int)5130),
	}
	public enum CullFaceMode
	{
		// GL_FRONT = 0x404
		Front = unchecked((int)1028),
		// GL_BACK = 0x405
		Back = unchecked((int)1029),
		// GL_FRONT_AND_BACK = 0x408
		FrontAndBack = unchecked((int)1032),
	}
	public enum DepthFunction
	{
		// GL_NEVER = 0x200
		Never = unchecked((int)512),
		// GL_LESS = 0x201
		Less = unchecked((int)513),
		// GL_EQUAL = 0x202
		Equal = unchecked((int)514),
		// GL_LEQUAL = 0x203
		Lequal = unchecked((int)515),
		// GL_GREATER = 0x204
		Greater = unchecked((int)516),
		// GL_NOTEQUAL = 0x205
		Notequal = unchecked((int)517),
		// GL_GEQUAL = 0x206
		Gequal = unchecked((int)518),
		// GL_ALWAYS = 0x207
		Always = unchecked((int)519),
	}
	public enum DrawBufferMode
	{
		// GL_NONE = 0x0
		// GL_NONE_OES = 0x0
		None = unchecked((int)0),
		// GL_FRONT_LEFT = 0x400
		FrontLeft = unchecked((int)1024),
		// GL_FRONT_RIGHT = 0x401
		FrontRight = unchecked((int)1025),
		// GL_BACK_LEFT = 0x402
		BackLeft = unchecked((int)1026),
		// GL_BACK_RIGHT = 0x403
		BackRight = unchecked((int)1027),
		// GL_FRONT = 0x404
		Front = unchecked((int)1028),
		// GL_BACK = 0x405
		Back = unchecked((int)1029),
		// GL_LEFT = 0x406
		Left = unchecked((int)1030),
		// GL_RIGHT = 0x407
		Right = unchecked((int)1031),
		// GL_FRONT_AND_BACK = 0x408
		FrontAndBack = unchecked((int)1032),
		// GL_AUX0 = 0x409
		Aux0 = unchecked((int)1033),
		// GL_AUX1 = 0x40A
		Aux1 = unchecked((int)1034),
		// GL_AUX2 = 0x40B
		Aux2 = unchecked((int)1035),
		// GL_AUX3 = 0x40C
		Aux3 = unchecked((int)1036),
	}
	public enum EnableCap
	{
		// GL_POINT_SMOOTH = 0xB10
		PointSmooth = unchecked((int)2832),
		// GL_LINE_SMOOTH = 0xB20
		LineSmooth = unchecked((int)2848),
		// GL_LINE_STIPPLE = 0xB24
		LineStipple = unchecked((int)2852),
		// GL_POLYGON_SMOOTH = 0xB41
		PolygonSmooth = unchecked((int)2881),
		// GL_POLYGON_STIPPLE = 0xB42
		PolygonStipple = unchecked((int)2882),
		// GL_CULL_FACE = 0xB44
		CullFace = unchecked((int)2884),
		// GL_LIGHTING = 0xB50
		Lighting = unchecked((int)2896),
		// GL_COLOR_MATERIAL = 0xB57
		ColorMaterial = unchecked((int)2903),
		// GL_FOG = 0xB60
		Fog = unchecked((int)2912),
		// GL_DEPTH_TEST = 0xB71
		DepthTest = unchecked((int)2929),
		// GL_STENCIL_TEST = 0xB90
		StencilTest = unchecked((int)2960),
		// GL_NORMALIZE = 0xBA1
		Normalize = unchecked((int)2977),
		// GL_ALPHA_TEST = 0xBC0
		AlphaTest = unchecked((int)3008),
		// GL_DITHER = 0xBD0
		Dither = unchecked((int)3024),
		// GL_BLEND = 0xBE2
		Blend = unchecked((int)3042),
		// GL_INDEX_LOGIC_OP = 0xBF1
		IndexLogicOp = unchecked((int)3057),
		// GL_COLOR_LOGIC_OP = 0xBF2
		ColorLogicOp = unchecked((int)3058),
		// GL_SCISSOR_TEST = 0xC11
		ScissorTest = unchecked((int)3089),
		// GL_TEXTURE_GEN_S = 0xC60
		TextureGenS = unchecked((int)3168),
		// GL_TEXTURE_GEN_T = 0xC61
		TextureGenT = unchecked((int)3169),
		// GL_TEXTURE_GEN_R = 0xC62
		TextureGenR = unchecked((int)3170),
		// GL_TEXTURE_GEN_Q = 0xC63
		TextureGenQ = unchecked((int)3171),
		// GL_AUTO_NORMAL = 0xD80
		AutoNormal = unchecked((int)3456),
		// GL_MAP1_COLOR_4 = 0xD90
		Map1Color4 = unchecked((int)3472),
		// GL_MAP1_INDEX = 0xD91
		Map1Index = unchecked((int)3473),
		// GL_MAP1_NORMAL = 0xD92
		Map1Normal = unchecked((int)3474),
		// GL_MAP1_TEXTURE_COORD_1 = 0xD93
		Map1TextureCoord1 = unchecked((int)3475),
		// GL_MAP1_TEXTURE_COORD_2 = 0xD94
		Map1TextureCoord2 = unchecked((int)3476),
		// GL_MAP1_TEXTURE_COORD_3 = 0xD95
		Map1TextureCoord3 = unchecked((int)3477),
		// GL_MAP1_TEXTURE_COORD_4 = 0xD96
		Map1TextureCoord4 = unchecked((int)3478),
		// GL_MAP1_VERTEX_3 = 0xD97
		Map1Vertex3 = unchecked((int)3479),
		// GL_MAP1_VERTEX_4 = 0xD98
		Map1Vertex4 = unchecked((int)3480),
		// GL_MAP2_COLOR_4 = 0xDB0
		Map2Color4 = unchecked((int)3504),
		// GL_MAP2_INDEX = 0xDB1
		Map2Index = unchecked((int)3505),
		// GL_MAP2_NORMAL = 0xDB2
		Map2Normal = unchecked((int)3506),
		// GL_MAP2_TEXTURE_COORD_1 = 0xDB3
		Map2TextureCoord1 = unchecked((int)3507),
		// GL_MAP2_TEXTURE_COORD_2 = 0xDB4
		Map2TextureCoord2 = unchecked((int)3508),
		// GL_MAP2_TEXTURE_COORD_3 = 0xDB5
		Map2TextureCoord3 = unchecked((int)3509),
		// GL_MAP2_TEXTURE_COORD_4 = 0xDB6
		Map2TextureCoord4 = unchecked((int)3510),
		// GL_MAP2_VERTEX_3 = 0xDB7
		Map2Vertex3 = unchecked((int)3511),
		// GL_MAP2_VERTEX_4 = 0xDB8
		Map2Vertex4 = unchecked((int)3512),
		// GL_TEXTURE_1D = 0xDE0
		Texture1d = unchecked((int)3552),
		// GL_TEXTURE_2D = 0xDE1
		Texture2d = unchecked((int)3553),
		// GL_POLYGON_OFFSET_POINT = 0x2A01
		PolygonOffsetPoint = unchecked((int)10753),
		// GL_POLYGON_OFFSET_LINE = 0x2A02
		PolygonOffsetLine = unchecked((int)10754),
		// GL_CLIP_PLANE0 = 0x3000
		ClipPlane0 = unchecked((int)12288),
		// GL_CLIP_PLANE1 = 0x3001
		ClipPlane1 = unchecked((int)12289),
		// GL_CLIP_PLANE2 = 0x3002
		ClipPlane2 = unchecked((int)12290),
		// GL_CLIP_PLANE3 = 0x3003
		ClipPlane3 = unchecked((int)12291),
		// GL_CLIP_PLANE4 = 0x3004
		ClipPlane4 = unchecked((int)12292),
		// GL_CLIP_PLANE5 = 0x3005
		ClipPlane5 = unchecked((int)12293),
		// GL_LIGHT0 = 0x4000
		Light0 = unchecked((int)16384),
		// GL_LIGHT1 = 0x4001
		Light1 = unchecked((int)16385),
		// GL_LIGHT2 = 0x4002
		Light2 = unchecked((int)16386),
		// GL_LIGHT3 = 0x4003
		Light3 = unchecked((int)16387),
		// GL_LIGHT4 = 0x4004
		Light4 = unchecked((int)16388),
		// GL_LIGHT5 = 0x4005
		Light5 = unchecked((int)16389),
		// GL_LIGHT6 = 0x4006
		Light6 = unchecked((int)16390),
		// GL_LIGHT7 = 0x4007
		Light7 = unchecked((int)16391),
		// GL_CONVOLUTION_1D_EXT = 0x8010
		Convolution1d = unchecked((int)32784),
		// GL_CONVOLUTION_2D_EXT = 0x8011
		Convolution2d = unchecked((int)32785),
		// GL_SEPARABLE_2D_EXT = 0x8012
		Separable2d = unchecked((int)32786),
		// GL_HISTOGRAM_EXT = 0x8024
		Histogram = unchecked((int)32804),
		// GL_MINMAX_EXT = 0x802E
		Minmax = unchecked((int)32814),
		// GL_POLYGON_OFFSET_FILL = 0x8037
		PolygonOffsetFill = unchecked((int)32823),
		// GL_RESCALE_NORMAL_EXT = 0x803A
		RescaleNormal = unchecked((int)32826),
		// GL_TEXTURE_3D_EXT = 0x806F
		Texture3d = unchecked((int)32879),
		// GL_VERTEX_ARRAY = 0x8074
		VertexArray = unchecked((int)32884),
		// GL_NORMAL_ARRAY = 0x8075
		NormalArray = unchecked((int)32885),
		// GL_COLOR_ARRAY = 0x8076
		ColorArray = unchecked((int)32886),
		// GL_INDEX_ARRAY = 0x8077
		IndexArray = unchecked((int)32887),
		// GL_TEXTURE_COORD_ARRAY = 0x8078
		TextureCoordArray = unchecked((int)32888),
		// GL_EDGE_FLAG_ARRAY = 0x8079
		EdgeFlagArray = unchecked((int)32889),
		// GL_INTERLACE_SGIX = 0x8094
		Interlace = unchecked((int)32916),
		// GL_MULTISAMPLE_SGIS = 0x809D
		Multisample = unchecked((int)32925),
		// GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E
		SampleAlphaToMask = unchecked((int)32926),
		// GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F
		SampleAlphaToOne = unchecked((int)32927),
		// GL_SAMPLE_MASK_SGIS = 0x80A0
		SampleMask = unchecked((int)32928),
		// GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC
		TextureColorTable = unchecked((int)32956),
		// GL_COLOR_TABLE_SGI = 0x80D0
		ColorTable = unchecked((int)32976),
		// GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1
		PostConvolutionColorTable = unchecked((int)32977),
		// GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2
		PostColorMatrixColorTable = unchecked((int)32978),
		// GL_TEXTURE_4D_SGIS = 0x8134
		Texture4d = unchecked((int)33076),
		// GL_PIXEL_TEX_GEN_SGIX = 0x8139
		PixelTexGen = unchecked((int)33081),
		// GL_SPRITE_SGIX = 0x8148
		Sprite = unchecked((int)33096),
		// GL_REFERENCE_PLANE_SGIX = 0x817D
		ReferencePlane = unchecked((int)33149),
		// GL_IR_INSTRUMENT1_SGIX = 0x817F
		IrInstrument1 = unchecked((int)33151),
		// GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183
		CalligraphicFragment = unchecked((int)33155),
		// GL_FRAMEZOOM_SGIX = 0x818B
		Framezoom = unchecked((int)33163),
		// GL_FOG_OFFSET_SGIX = 0x8198
		FogOffset = unchecked((int)33176),
		// GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB
		SharedTexturePalette = unchecked((int)33275),
		// GL_ASYNC_HISTOGRAM_SGIX = 0x832C
		AsyncHistogram = unchecked((int)33580),
		// GL_PIXEL_TEXTURE_SGIS = 0x8353
		PixelTexture = unchecked((int)33619),
		// GL_ASYNC_TEX_IMAGE_SGIX = 0x835C
		AsyncTexImage = unchecked((int)33628),
		// GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D
		AsyncDrawPixels = unchecked((int)33629),
		// GL_ASYNC_READ_PIXELS_SGIX = 0x835E
		AsyncReadPixels = unchecked((int)33630),
		// GL_FRAGMENT_LIGHTING_SGIX = 0x8400
		FragmentLighting = unchecked((int)33792),
		// GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401
		FragmentColorMaterial = unchecked((int)33793),
		// GL_FRAGMENT_LIGHT0_SGIX = 0x840C
		FragmentLight0 = unchecked((int)33804),
		// GL_FRAGMENT_LIGHT1_SGIX = 0x840D
		FragmentLight1 = unchecked((int)33805),
		// GL_FRAGMENT_LIGHT2_SGIX = 0x840E
		FragmentLight2 = unchecked((int)33806),
		// GL_FRAGMENT_LIGHT3_SGIX = 0x840F
		FragmentLight3 = unchecked((int)33807),
		// GL_FRAGMENT_LIGHT4_SGIX = 0x8410
		FragmentLight4 = unchecked((int)33808),
		// GL_FRAGMENT_LIGHT5_SGIX = 0x8411
		FragmentLight5 = unchecked((int)33809),
		// GL_FRAGMENT_LIGHT6_SGIX = 0x8412
		FragmentLight6 = unchecked((int)33810),
		// GL_FRAGMENT_LIGHT7_SGIX = 0x8413
		FragmentLight7 = unchecked((int)33811),
	}
	public enum ErrorCode
	{
		// GL_NO_ERROR = 0x0
		NoError = unchecked((int)0),
		// GL_INVALID_ENUM = 0x500
		InvalidEnum = unchecked((int)1280),
		// GL_INVALID_VALUE = 0x501
		InvalidValue = unchecked((int)1281),
		// GL_INVALID_OPERATION = 0x502
		InvalidOperation = unchecked((int)1282),
		// GL_STACK_OVERFLOW = 0x503
		StackOverflow = unchecked((int)1283),
		// GL_STACK_UNDERFLOW = 0x504
		StackUnderflow = unchecked((int)1284),
		// GL_OUT_OF_MEMORY = 0x505
		OutOfMemory = unchecked((int)1285),
		// GL_INVALID_FRAMEBUFFER_OPERATION = 0x506
		// GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x506
		// GL_INVALID_FRAMEBUFFER_OPERATION_OES = 0x506
		InvalidFramebufferOperation = unchecked((int)1286),
		// GL_TABLE_TOO_LARGE = 0x8031
		// GL_TABLE_TOO_LARGE_EXT = 0x8031
		TableTooLarge = unchecked((int)32817),
		// GL_TEXTURE_TOO_LARGE_EXT = 0x8065
		TextureTooLarge = unchecked((int)32869),
	}
	public enum FogCoordinatePointerType
	{
		// GL_FLOAT = 0x1406
		Float = unchecked((int)5126),
		// GL_DOUBLE = 0x140A
		Double = unchecked((int)5130),
	}
	public enum FrontFaceDirection
	{
		// GL_CW = 0x900
		Cw = unchecked((int)2304),
		// GL_CCW = 0x901
		Ccw = unchecked((int)2305),
	}
	public enum GetPName
	{
		// GL_CURRENT_COLOR = 0xB00
		CurrentColor = unchecked((int)2816),
		// GL_CURRENT_INDEX = 0xB01
		CurrentIndex = unchecked((int)2817),
		// GL_CURRENT_NORMAL = 0xB02
		CurrentNormal = unchecked((int)2818),
		// GL_CURRENT_TEXTURE_COORDS = 0xB03
		CurrentTextureCoords = unchecked((int)2819),
		// GL_CURRENT_RASTER_COLOR = 0xB04
		CurrentRasterColor = unchecked((int)2820),
		// GL_CURRENT_RASTER_INDEX = 0xB05
		CurrentRasterIndex = unchecked((int)2821),
		// GL_CURRENT_RASTER_TEXTURE_COORDS = 0xB06
		CurrentRasterTextureCoords = unchecked((int)2822),
		// GL_CURRENT_RASTER_POSITION = 0xB07
		CurrentRasterPosition = unchecked((int)2823),
		// GL_CURRENT_RASTER_POSITION_VALID = 0xB08
		CurrentRasterPositionValid = unchecked((int)2824),
		// GL_CURRENT_RASTER_DISTANCE = 0xB09
		CurrentRasterDistance = unchecked((int)2825),
		// GL_POINT_SMOOTH = 0xB10
		PointSmooth = unchecked((int)2832),
		// GL_POINT_SIZE = 0xB11
		PointSize = unchecked((int)2833),
		// GL_POINT_SIZE_RANGE = 0xB12
		PointSizeRange = unchecked((int)2834),
		// GL_SMOOTH_POINT_SIZE_RANGE = 0xB12
		SmoothPointSizeRange = unchecked((int)2834),
		// GL_POINT_SIZE_GRANULARITY = 0xB13
		PointSizeGranularity = unchecked((int)2835),
		// GL_SMOOTH_POINT_SIZE_GRANULARITY = 0xB13
		SmoothPointSizeGranularity = unchecked((int)2835),
		// GL_LINE_SMOOTH = 0xB20
		LineSmooth = unchecked((int)2848),
		// GL_LINE_WIDTH = 0xB21
		LineWidth = unchecked((int)2849),
		// GL_LINE_WIDTH_RANGE = 0xB22
		LineWidthRange = unchecked((int)2850),
		// GL_SMOOTH_LINE_WIDTH_RANGE = 0xB22
		SmoothLineWidthRange = unchecked((int)2850),
		// GL_LINE_WIDTH_GRANULARITY = 0xB23
		LineWidthGranularity = unchecked((int)2851),
		// GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0xB23
		SmoothLineWidthGranularity = unchecked((int)2851),
		// GL_LINE_STIPPLE = 0xB24
		LineStipple = unchecked((int)2852),
		// GL_LINE_STIPPLE_PATTERN = 0xB25
		LineStipplePattern = unchecked((int)2853),
		// GL_LINE_STIPPLE_REPEAT = 0xB26
		LineStippleRepeat = unchecked((int)2854),
		// GL_LIST_MODE = 0xB30
		ListMode = unchecked((int)2864),
		// GL_MAX_LIST_NESTING = 0xB31
		MaxListNesting = unchecked((int)2865),
		// GL_LIST_BASE = 0xB32
		ListBase = unchecked((int)2866),
		// GL_LIST_INDEX = 0xB33
		ListIndex = unchecked((int)2867),
		// GL_POLYGON_MODE = 0xB40
		PolygonMode = unchecked((int)2880),
		// GL_POLYGON_SMOOTH = 0xB41
		PolygonSmooth = unchecked((int)2881),
		// GL_POLYGON_STIPPLE = 0xB42
		PolygonStipple = unchecked((int)2882),
		// GL_EDGE_FLAG = 0xB43
		EdgeFlag = unchecked((int)2883),
		// GL_CULL_FACE = 0xB44
		CullFace = unchecked((int)2884),
		// GL_CULL_FACE_MODE = 0xB45
		CullFaceMode = unchecked((int)2885),
		// GL_FRONT_FACE = 0xB46
		FrontFace = unchecked((int)2886),
		// GL_LIGHTING = 0xB50
		Lighting = unchecked((int)2896),
		// GL_LIGHT_MODEL_LOCAL_VIEWER = 0xB51
		LightModelLocalViewer = unchecked((int)2897),
		// GL_LIGHT_MODEL_TWO_SIDE = 0xB52
		LightModelTwoSide = unchecked((int)2898),
		// GL_LIGHT_MODEL_AMBIENT = 0xB53
		LightModelAmbient = unchecked((int)2899),
		// GL_SHADE_MODEL = 0xB54
		ShadeModel = unchecked((int)2900),
		// GL_COLOR_MATERIAL_FACE = 0xB55
		ColorMaterialFace = unchecked((int)2901),
		// GL_COLOR_MATERIAL_PARAMETER = 0xB56
		ColorMaterialParameter = unchecked((int)2902),
		// GL_COLOR_MATERIAL = 0xB57
		ColorMaterial = unchecked((int)2903),
		// GL_FOG = 0xB60
		Fog = unchecked((int)2912),
		// GL_FOG_INDEX = 0xB61
		FogIndex = unchecked((int)2913),
		// GL_FOG_DENSITY = 0xB62
		FogDensity = unchecked((int)2914),
		// GL_FOG_START = 0xB63
		FogStart = unchecked((int)2915),
		// GL_FOG_END = 0xB64
		FogEnd = unchecked((int)2916),
		// GL_FOG_MODE = 0xB65
		FogMode = unchecked((int)2917),
		// GL_FOG_COLOR = 0xB66
		FogColor = unchecked((int)2918),
		// GL_DEPTH_RANGE = 0xB70
		DepthRange = unchecked((int)2928),
		// GL_DEPTH_TEST = 0xB71
		DepthTest = unchecked((int)2929),
		// GL_DEPTH_WRITEMASK = 0xB72
		DepthWritemask = unchecked((int)2930),
		// GL_DEPTH_CLEAR_VALUE = 0xB73
		DepthClearValue = unchecked((int)2931),
		// GL_DEPTH_FUNC = 0xB74
		DepthFunc = unchecked((int)2932),
		// GL_ACCUM_CLEAR_VALUE = 0xB80
		AccumClearValue = unchecked((int)2944),
		// GL_STENCIL_TEST = 0xB90
		StencilTest = unchecked((int)2960),
		// GL_STENCIL_CLEAR_VALUE = 0xB91
		StencilClearValue = unchecked((int)2961),
		// GL_STENCIL_FUNC = 0xB92
		StencilFunc = unchecked((int)2962),
		// GL_STENCIL_VALUE_MASK = 0xB93
		StencilValueMask = unchecked((int)2963),
		// GL_STENCIL_FAIL = 0xB94
		StencilFail = unchecked((int)2964),
		// GL_STENCIL_PASS_DEPTH_FAIL = 0xB95
		StencilPassDepthFail = unchecked((int)2965),
		// GL_STENCIL_PASS_DEPTH_PASS = 0xB96
		StencilPassDepthPass = unchecked((int)2966),
		// GL_STENCIL_REF = 0xB97
		StencilRef = unchecked((int)2967),
		// GL_STENCIL_WRITEMASK = 0xB98
		StencilWritemask = unchecked((int)2968),
		// GL_MATRIX_MODE = 0xBA0
		MatrixMode = unchecked((int)2976),
		// GL_NORMALIZE = 0xBA1
		Normalize = unchecked((int)2977),
		// GL_VIEWPORT = 0xBA2
		Viewport = unchecked((int)2978),
		// GL_MODELVIEW0_STACK_DEPTH_EXT = 0xBA3
		Modelview0StackDepth = unchecked((int)2979),
		// GL_MODELVIEW_STACK_DEPTH = 0xBA3
		ModelviewStackDepth = unchecked((int)2979),
		// GL_PROJECTION_STACK_DEPTH = 0xBA4
		ProjectionStackDepth = unchecked((int)2980),
		// GL_TEXTURE_STACK_DEPTH = 0xBA5
		TextureStackDepth = unchecked((int)2981),
		// GL_MODELVIEW0_MATRIX_EXT = 0xBA6
		Modelview0Matrix = unchecked((int)2982),
		// GL_MODELVIEW_MATRIX = 0xBA6
		ModelviewMatrix = unchecked((int)2982),
		// GL_PROJECTION_MATRIX = 0xBA7
		ProjectionMatrix = unchecked((int)2983),
		// GL_TEXTURE_MATRIX = 0xBA8
		TextureMatrix = unchecked((int)2984),
		// GL_ATTRIB_STACK_DEPTH = 0xBB0
		AttribStackDepth = unchecked((int)2992),
		// GL_CLIENT_ATTRIB_STACK_DEPTH = 0xBB1
		ClientAttribStackDepth = unchecked((int)2993),
		// GL_ALPHA_TEST = 0xBC0
		AlphaTest = unchecked((int)3008),
		// GL_ALPHA_TEST_QCOM = 0xBC0
		AlphaTestQcom = unchecked((int)3008),
		// GL_ALPHA_TEST_FUNC = 0xBC1
		AlphaTestFunc = unchecked((int)3009),
		// GL_ALPHA_TEST_FUNC_QCOM = 0xBC1
		AlphaTestFuncQcom = unchecked((int)3009),
		// GL_ALPHA_TEST_REF = 0xBC2
		AlphaTestRef = unchecked((int)3010),
		// GL_ALPHA_TEST_REF_QCOM = 0xBC2
		AlphaTestRefQcom = unchecked((int)3010),
		// GL_DITHER = 0xBD0
		Dither = unchecked((int)3024),
		// GL_BLEND_DST = 0xBE0
		BlendDst = unchecked((int)3040),
		// GL_BLEND_SRC = 0xBE1
		BlendSrc = unchecked((int)3041),
		// GL_BLEND = 0xBE2
		Blend = unchecked((int)3042),
		// GL_LOGIC_OP_MODE = 0xBF0
		LogicOpMode = unchecked((int)3056),
		// GL_INDEX_LOGIC_OP = 0xBF1
		IndexLogicOp = unchecked((int)3057),
		// GL_LOGIC_OP = 0xBF1
		LogicOp = unchecked((int)3057),
		// GL_COLOR_LOGIC_OP = 0xBF2
		ColorLogicOp = unchecked((int)3058),
		// GL_AUX_BUFFERS = 0xC00
		AuxBuffers = unchecked((int)3072),
		// GL_DRAW_BUFFER = 0xC01
		// GL_DRAW_BUFFER_EXT = 0xC01
		DrawBuffer = unchecked((int)3073),
		// GL_READ_BUFFER = 0xC02
		// GL_READ_BUFFER_EXT = 0xC02
		// GL_READ_BUFFER_NV = 0xC02
		ReadBuffer = unchecked((int)3074),
		// GL_SCISSOR_BOX = 0xC10
		ScissorBox = unchecked((int)3088),
		// GL_SCISSOR_TEST = 0xC11
		ScissorTest = unchecked((int)3089),
		// GL_INDEX_CLEAR_VALUE = 0xC20
		IndexClearValue = unchecked((int)3104),
		// GL_INDEX_WRITEMASK = 0xC21
		IndexWritemask = unchecked((int)3105),
		// GL_COLOR_CLEAR_VALUE = 0xC22
		ColorClearValue = unchecked((int)3106),
		// GL_COLOR_WRITEMASK = 0xC23
		ColorWritemask = unchecked((int)3107),
		// GL_INDEX_MODE = 0xC30
		IndexMode = unchecked((int)3120),
		// GL_RGBA_MODE = 0xC31
		RgbaMode = unchecked((int)3121),
		// GL_DOUBLEBUFFER = 0xC32
		Doublebuffer = unchecked((int)3122),
		// GL_STEREO = 0xC33
		Stereo = unchecked((int)3123),
		// GL_RENDER_MODE = 0xC40
		RenderMode = unchecked((int)3136),
		// GL_PERSPECTIVE_CORRECTION_HINT = 0xC50
		PerspectiveCorrectionHint = unchecked((int)3152),
		// GL_POINT_SMOOTH_HINT = 0xC51
		PointSmoothHint = unchecked((int)3153),
		// GL_LINE_SMOOTH_HINT = 0xC52
		LineSmoothHint = unchecked((int)3154),
		// GL_POLYGON_SMOOTH_HINT = 0xC53
		PolygonSmoothHint = unchecked((int)3155),
		// GL_FOG_HINT = 0xC54
		FogHint = unchecked((int)3156),
		// GL_TEXTURE_GEN_S = 0xC60
		TextureGenS = unchecked((int)3168),
		// GL_TEXTURE_GEN_T = 0xC61
		TextureGenT = unchecked((int)3169),
		// GL_TEXTURE_GEN_R = 0xC62
		TextureGenR = unchecked((int)3170),
		// GL_TEXTURE_GEN_Q = 0xC63
		TextureGenQ = unchecked((int)3171),
		// GL_PIXEL_MAP_I_TO_I_SIZE = 0xCB0
		PixelMapIToISize = unchecked((int)3248),
		// GL_PIXEL_MAP_S_TO_S_SIZE = 0xCB1
		PixelMapSToSSize = unchecked((int)3249),
		// GL_PIXEL_MAP_I_TO_R_SIZE = 0xCB2
		PixelMapIToRSize = unchecked((int)3250),
		// GL_PIXEL_MAP_I_TO_G_SIZE = 0xCB3
		PixelMapIToGSize = unchecked((int)3251),
		// GL_PIXEL_MAP_I_TO_B_SIZE = 0xCB4
		PixelMapIToBSize = unchecked((int)3252),
		// GL_PIXEL_MAP_I_TO_A_SIZE = 0xCB5
		PixelMapIToASize = unchecked((int)3253),
		// GL_PIXEL_MAP_R_TO_R_SIZE = 0xCB6
		PixelMapRToRSize = unchecked((int)3254),
		// GL_PIXEL_MAP_G_TO_G_SIZE = 0xCB7
		PixelMapGToGSize = unchecked((int)3255),
		// GL_PIXEL_MAP_B_TO_B_SIZE = 0xCB8
		PixelMapBToBSize = unchecked((int)3256),
		// GL_PIXEL_MAP_A_TO_A_SIZE = 0xCB9
		PixelMapAToASize = unchecked((int)3257),
		// GL_UNPACK_SWAP_BYTES = 0xCF0
		UnpackSwapBytes = unchecked((int)3312),
		// GL_UNPACK_LSB_FIRST = 0xCF1
		UnpackLsbFirst = unchecked((int)3313),
		// GL_UNPACK_ROW_LENGTH = 0xCF2
		UnpackRowLength = unchecked((int)3314),
		// GL_UNPACK_SKIP_ROWS = 0xCF3
		UnpackSkipRows = unchecked((int)3315),
		// GL_UNPACK_SKIP_PIXELS = 0xCF4
		UnpackSkipPixels = unchecked((int)3316),
		// GL_UNPACK_ALIGNMENT = 0xCF5
		UnpackAlignment = unchecked((int)3317),
		// GL_PACK_SWAP_BYTES = 0xD00
		PackSwapBytes = unchecked((int)3328),
		// GL_PACK_LSB_FIRST = 0xD01
		PackLsbFirst = unchecked((int)3329),
		// GL_PACK_ROW_LENGTH = 0xD02
		PackRowLength = unchecked((int)3330),
		// GL_PACK_SKIP_ROWS = 0xD03
		PackSkipRows = unchecked((int)3331),
		// GL_PACK_SKIP_PIXELS = 0xD04
		PackSkipPixels = unchecked((int)3332),
		// GL_PACK_ALIGNMENT = 0xD05
		PackAlignment = unchecked((int)3333),
		// GL_MAP_COLOR = 0xD10
		MapColor = unchecked((int)3344),
		// GL_MAP_STENCIL = 0xD11
		MapStencil = unchecked((int)3345),
		// GL_INDEX_SHIFT = 0xD12
		IndexShift = unchecked((int)3346),
		// GL_INDEX_OFFSET = 0xD13
		IndexOffset = unchecked((int)3347),
		// GL_RED_SCALE = 0xD14
		RedScale = unchecked((int)3348),
		// GL_RED_BIAS = 0xD15
		RedBias = unchecked((int)3349),
		// GL_ZOOM_X = 0xD16
		ZoomX = unchecked((int)3350),
		// GL_ZOOM_Y = 0xD17
		ZoomY = unchecked((int)3351),
		// GL_GREEN_SCALE = 0xD18
		GreenScale = unchecked((int)3352),
		// GL_GREEN_BIAS = 0xD19
		GreenBias = unchecked((int)3353),
		// GL_BLUE_SCALE = 0xD1A
		BlueScale = unchecked((int)3354),
		// GL_BLUE_BIAS = 0xD1B
		BlueBias = unchecked((int)3355),
		// GL_ALPHA_SCALE = 0xD1C
		AlphaScale = unchecked((int)3356),
		// GL_ALPHA_BIAS = 0xD1D
		AlphaBias = unchecked((int)3357),
		// GL_DEPTH_SCALE = 0xD1E
		DepthScale = unchecked((int)3358),
		// GL_DEPTH_BIAS = 0xD1F
		DepthBias = unchecked((int)3359),
		// GL_MAX_EVAL_ORDER = 0xD30
		MaxEvalOrder = unchecked((int)3376),
		// GL_MAX_LIGHTS = 0xD31
		MaxLights = unchecked((int)3377),
		// GL_MAX_CLIP_DISTANCES = 0xD32
		MaxClipDistances = unchecked((int)3378),
		// GL_MAX_CLIP_PLANES = 0xD32
		MaxClipPlanes = unchecked((int)3378),
		// GL_MAX_TEXTURE_SIZE = 0xD33
		MaxTextureSize = unchecked((int)3379),
		// GL_MAX_PIXEL_MAP_TABLE = 0xD34
		MaxPixelMapTable = unchecked((int)3380),
		// GL_MAX_ATTRIB_STACK_DEPTH = 0xD35
		MaxAttribStackDepth = unchecked((int)3381),
		// GL_MAX_MODELVIEW_STACK_DEPTH = 0xD36
		MaxModelviewStackDepth = unchecked((int)3382),
		// GL_MAX_NAME_STACK_DEPTH = 0xD37
		MaxNameStackDepth = unchecked((int)3383),
		// GL_MAX_PROJECTION_STACK_DEPTH = 0xD38
		MaxProjectionStackDepth = unchecked((int)3384),
		// GL_MAX_TEXTURE_STACK_DEPTH = 0xD39
		MaxTextureStackDepth = unchecked((int)3385),
		// GL_MAX_VIEWPORT_DIMS = 0xD3A
		MaxViewportDims = unchecked((int)3386),
		// GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0xD3B
		MaxClientAttribStackDepth = unchecked((int)3387),
		// GL_SUBPIXEL_BITS = 0xD50
		SubpixelBits = unchecked((int)3408),
		// GL_INDEX_BITS = 0xD51
		IndexBits = unchecked((int)3409),
		// GL_RED_BITS = 0xD52
		RedBits = unchecked((int)3410),
		// GL_GREEN_BITS = 0xD53
		GreenBits = unchecked((int)3411),
		// GL_BLUE_BITS = 0xD54
		BlueBits = unchecked((int)3412),
		// GL_ALPHA_BITS = 0xD55
		AlphaBits = unchecked((int)3413),
		// GL_DEPTH_BITS = 0xD56
		DepthBits = unchecked((int)3414),
		// GL_STENCIL_BITS = 0xD57
		StencilBits = unchecked((int)3415),
		// GL_ACCUM_RED_BITS = 0xD58
		AccumRedBits = unchecked((int)3416),
		// GL_ACCUM_GREEN_BITS = 0xD59
		AccumGreenBits = unchecked((int)3417),
		// GL_ACCUM_BLUE_BITS = 0xD5A
		AccumBlueBits = unchecked((int)3418),
		// GL_ACCUM_ALPHA_BITS = 0xD5B
		AccumAlphaBits = unchecked((int)3419),
		// GL_NAME_STACK_DEPTH = 0xD70
		NameStackDepth = unchecked((int)3440),
		// GL_AUTO_NORMAL = 0xD80
		AutoNormal = unchecked((int)3456),
		// GL_MAP1_COLOR_4 = 0xD90
		Map1Color4 = unchecked((int)3472),
		// GL_MAP1_INDEX = 0xD91
		Map1Index = unchecked((int)3473),
		// GL_MAP1_NORMAL = 0xD92
		Map1Normal = unchecked((int)3474),
		// GL_MAP1_TEXTURE_COORD_1 = 0xD93
		Map1TextureCoord1 = unchecked((int)3475),
		// GL_MAP1_TEXTURE_COORD_2 = 0xD94
		Map1TextureCoord2 = unchecked((int)3476),
		// GL_MAP1_TEXTURE_COORD_3 = 0xD95
		Map1TextureCoord3 = unchecked((int)3477),
		// GL_MAP1_TEXTURE_COORD_4 = 0xD96
		Map1TextureCoord4 = unchecked((int)3478),
		// GL_MAP1_VERTEX_3 = 0xD97
		Map1Vertex3 = unchecked((int)3479),
		// GL_MAP1_VERTEX_4 = 0xD98
		Map1Vertex4 = unchecked((int)3480),
		// GL_MAP2_COLOR_4 = 0xDB0
		Map2Color4 = unchecked((int)3504),
		// GL_MAP2_INDEX = 0xDB1
		Map2Index = unchecked((int)3505),
		// GL_MAP2_NORMAL = 0xDB2
		Map2Normal = unchecked((int)3506),
		// GL_MAP2_TEXTURE_COORD_1 = 0xDB3
		Map2TextureCoord1 = unchecked((int)3507),
		// GL_MAP2_TEXTURE_COORD_2 = 0xDB4
		Map2TextureCoord2 = unchecked((int)3508),
		// GL_MAP2_TEXTURE_COORD_3 = 0xDB5
		Map2TextureCoord3 = unchecked((int)3509),
		// GL_MAP2_TEXTURE_COORD_4 = 0xDB6
		Map2TextureCoord4 = unchecked((int)3510),
		// GL_MAP2_VERTEX_3 = 0xDB7
		Map2Vertex3 = unchecked((int)3511),
		// GL_MAP2_VERTEX_4 = 0xDB8
		Map2Vertex4 = unchecked((int)3512),
		// GL_MAP1_GRID_DOMAIN = 0xDD0
		Map1GridDomain = unchecked((int)3536),
		// GL_MAP1_GRID_SEGMENTS = 0xDD1
		Map1GridSegments = unchecked((int)3537),
		// GL_MAP2_GRID_DOMAIN = 0xDD2
		Map2GridDomain = unchecked((int)3538),
		// GL_MAP2_GRID_SEGMENTS = 0xDD3
		Map2GridSegments = unchecked((int)3539),
		// GL_TEXTURE_1D = 0xDE0
		Texture1d = unchecked((int)3552),
		// GL_TEXTURE_2D = 0xDE1
		Texture2d = unchecked((int)3553),
		// GL_FEEDBACK_BUFFER_SIZE = 0xDF1
		FeedbackBufferSize = unchecked((int)3569),
		// GL_FEEDBACK_BUFFER_TYPE = 0xDF2
		FeedbackBufferType = unchecked((int)3570),
		// GL_SELECTION_BUFFER_SIZE = 0xDF4
		SelectionBufferSize = unchecked((int)3572),
		// GL_POLYGON_OFFSET_UNITS = 0x2A00
		PolygonOffsetUnits = unchecked((int)10752),
		// GL_POLYGON_OFFSET_POINT = 0x2A01
		PolygonOffsetPoint = unchecked((int)10753),
		// GL_POLYGON_OFFSET_LINE = 0x2A02
		PolygonOffsetLine = unchecked((int)10754),
		// GL_CLIP_PLANE0 = 0x3000
		ClipPlane0 = unchecked((int)12288),
		// GL_CLIP_PLANE1 = 0x3001
		ClipPlane1 = unchecked((int)12289),
		// GL_CLIP_PLANE2 = 0x3002
		ClipPlane2 = unchecked((int)12290),
		// GL_CLIP_PLANE3 = 0x3003
		ClipPlane3 = unchecked((int)12291),
		// GL_CLIP_PLANE4 = 0x3004
		ClipPlane4 = unchecked((int)12292),
		// GL_CLIP_PLANE5 = 0x3005
		ClipPlane5 = unchecked((int)12293),
		// GL_LIGHT0 = 0x4000
		Light0 = unchecked((int)16384),
		// GL_LIGHT1 = 0x4001
		Light1 = unchecked((int)16385),
		// GL_LIGHT2 = 0x4002
		Light2 = unchecked((int)16386),
		// GL_LIGHT3 = 0x4003
		Light3 = unchecked((int)16387),
		// GL_LIGHT4 = 0x4004
		Light4 = unchecked((int)16388),
		// GL_LIGHT5 = 0x4005
		Light5 = unchecked((int)16389),
		// GL_LIGHT6 = 0x4006
		Light6 = unchecked((int)16390),
		// GL_LIGHT7 = 0x4007
		Light7 = unchecked((int)16391),
		// GL_BLEND_COLOR_EXT = 0x8005
		BlendColor = unchecked((int)32773),
		// GL_BLEND_EQUATION_EXT = 0x8009
		BlendEquation = unchecked((int)32777),
		// GL_PACK_CMYK_HINT_EXT = 0x800E
		PackCmykHint = unchecked((int)32782),
		// GL_UNPACK_CMYK_HINT_EXT = 0x800F
		UnpackCmykHint = unchecked((int)32783),
		// GL_CONVOLUTION_1D_EXT = 0x8010
		Convolution1d = unchecked((int)32784),
		// GL_CONVOLUTION_2D_EXT = 0x8011
		Convolution2d = unchecked((int)32785),
		// GL_SEPARABLE_2D_EXT = 0x8012
		Separable2d = unchecked((int)32786),
		// GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C
		PostConvolutionRedScale = unchecked((int)32796),
		// GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D
		PostConvolutionGreenScale = unchecked((int)32797),
		// GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E
		PostConvolutionBlueScale = unchecked((int)32798),
		// GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F
		PostConvolutionAlphaScale = unchecked((int)32799),
		// GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020
		PostConvolutionRedBias = unchecked((int)32800),
		// GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021
		PostConvolutionGreenBias = unchecked((int)32801),
		// GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022
		PostConvolutionBlueBias = unchecked((int)32802),
		// GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023
		PostConvolutionAlphaBias = unchecked((int)32803),
		// GL_HISTOGRAM_EXT = 0x8024
		Histogram = unchecked((int)32804),
		// GL_MINMAX_EXT = 0x802E
		Minmax = unchecked((int)32814),
		// GL_POLYGON_OFFSET_FILL = 0x8037
		PolygonOffsetFill = unchecked((int)32823),
		// GL_POLYGON_OFFSET_FACTOR = 0x8038
		PolygonOffsetFactor = unchecked((int)32824),
		// GL_POLYGON_OFFSET_BIAS_EXT = 0x8039
		PolygonOffsetBias = unchecked((int)32825),
		// GL_RESCALE_NORMAL_EXT = 0x803A
		RescaleNormal = unchecked((int)32826),
		// GL_TEXTURE_BINDING_1D = 0x8068
		TextureBinding1d = unchecked((int)32872),
		// GL_TEXTURE_BINDING_2D = 0x8069
		TextureBinding2d = unchecked((int)32873),
		// GL_TEXTURE_3D_BINDING_EXT = 0x806A
		Texture3dBinding = unchecked((int)32874),
		// GL_TEXTURE_BINDING_3D = 0x806A
		TextureBinding3d = unchecked((int)32874),
		// GL_PACK_SKIP_IMAGES_EXT = 0x806B
		PackSkipImages = unchecked((int)32875),
		// GL_PACK_IMAGE_HEIGHT_EXT = 0x806C
		PackImageHeight = unchecked((int)32876),
		// GL_UNPACK_SKIP_IMAGES_EXT = 0x806D
		UnpackSkipImages = unchecked((int)32877),
		// GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E
		UnpackImageHeight = unchecked((int)32878),
		// GL_TEXTURE_3D_EXT = 0x806F
		Texture3d = unchecked((int)32879),
		// GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073
		Max3dTextureSize = unchecked((int)32883),
		// GL_VERTEX_ARRAY = 0x8074
		VertexArray = unchecked((int)32884),
		// GL_NORMAL_ARRAY = 0x8075
		NormalArray = unchecked((int)32885),
		// GL_COLOR_ARRAY = 0x8076
		ColorArray = unchecked((int)32886),
		// GL_INDEX_ARRAY = 0x8077
		IndexArray = unchecked((int)32887),
		// GL_TEXTURE_COORD_ARRAY = 0x8078
		TextureCoordArray = unchecked((int)32888),
		// GL_EDGE_FLAG_ARRAY = 0x8079
		EdgeFlagArray = unchecked((int)32889),
		// GL_VERTEX_ARRAY_SIZE = 0x807A
		VertexArraySize = unchecked((int)32890),
		// GL_VERTEX_ARRAY_TYPE = 0x807B
		VertexArrayType = unchecked((int)32891),
		// GL_VERTEX_ARRAY_STRIDE = 0x807C
		VertexArrayStride = unchecked((int)32892),
		// GL_VERTEX_ARRAY_COUNT_EXT = 0x807D
		VertexArrayCount = unchecked((int)32893),
		// GL_NORMAL_ARRAY_TYPE = 0x807E
		NormalArrayType = unchecked((int)32894),
		// GL_NORMAL_ARRAY_STRIDE = 0x807F
		NormalArrayStride = unchecked((int)32895),
		// GL_NORMAL_ARRAY_COUNT_EXT = 0x8080
		NormalArrayCount = unchecked((int)32896),
		// GL_COLOR_ARRAY_SIZE = 0x8081
		ColorArraySize = unchecked((int)32897),
		// GL_COLOR_ARRAY_TYPE = 0x8082
		ColorArrayType = unchecked((int)32898),
		// GL_COLOR_ARRAY_STRIDE = 0x8083
		ColorArrayStride = unchecked((int)32899),
		// GL_COLOR_ARRAY_COUNT_EXT = 0x8084
		ColorArrayCount = unchecked((int)32900),
		// GL_INDEX_ARRAY_TYPE = 0x8085
		IndexArrayType = unchecked((int)32901),
		// GL_INDEX_ARRAY_STRIDE = 0x8086
		IndexArrayStride = unchecked((int)32902),
		// GL_INDEX_ARRAY_COUNT_EXT = 0x8087
		IndexArrayCount = unchecked((int)32903),
		// GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088
		TextureCoordArraySize = unchecked((int)32904),
		// GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089
		TextureCoordArrayType = unchecked((int)32905),
		// GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A
		TextureCoordArrayStride = unchecked((int)32906),
		// GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B
		TextureCoordArrayCount = unchecked((int)32907),
		// GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C
		EdgeFlagArrayStride = unchecked((int)32908),
		// GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D
		EdgeFlagArrayCount = unchecked((int)32909),
		// GL_INTERLACE_SGIX = 0x8094
		Interlace = unchecked((int)32916),
		// GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096
		DetailTexture2dBinding = unchecked((int)32918),
		// GL_MULTISAMPLE_SGIS = 0x809D
		Multisample = unchecked((int)32925),
		// GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E
		SampleAlphaToMask = unchecked((int)32926),
		// GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F
		SampleAlphaToOne = unchecked((int)32927),
		// GL_SAMPLE_MASK_SGIS = 0x80A0
		SampleMask = unchecked((int)32928),
		// GL_SAMPLE_BUFFERS_SGIS = 0x80A8
		SampleBuffers = unchecked((int)32936),
		// GL_SAMPLES_SGIS = 0x80A9
		Samples = unchecked((int)32937),
		// GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA
		SampleMaskValue = unchecked((int)32938),
		// GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB
		SampleMaskInvert = unchecked((int)32939),
		// GL_SAMPLE_PATTERN_SGIS = 0x80AC
		SamplePattern = unchecked((int)32940),
		// GL_COLOR_MATRIX_SGI = 0x80B1
		ColorMatrix = unchecked((int)32945),
		// GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2
		ColorMatrixStackDepth = unchecked((int)32946),
		// GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3
		MaxColorMatrixStackDepth = unchecked((int)32947),
		// GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4
		PostColorMatrixRedScale = unchecked((int)32948),
		// GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5
		PostColorMatrixGreenScale = unchecked((int)32949),
		// GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6
		PostColorMatrixBlueScale = unchecked((int)32950),
		// GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7
		PostColorMatrixAlphaScale = unchecked((int)32951),
		// GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8
		PostColorMatrixRedBias = unchecked((int)32952),
		// GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9
		PostColorMatrixGreenBias = unchecked((int)32953),
		// GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA
		PostColorMatrixBlueBias = unchecked((int)32954),
		// GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB
		PostColorMatrixAlphaBias = unchecked((int)32955),
		// GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC
		TextureColorTable = unchecked((int)32956),
		// GL_COLOR_TABLE_SGI = 0x80D0
		ColorTable = unchecked((int)32976),
		// GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1
		PostConvolutionColorTable = unchecked((int)32977),
		// GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2
		PostColorMatrixColorTable = unchecked((int)32978),
		// GL_POINT_SIZE_MIN_SGIS = 0x8126
		PointSizeMin = unchecked((int)33062),
		// GL_POINT_SIZE_MAX_SGIS = 0x8127
		PointSizeMax = unchecked((int)33063),
		// GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128
		PointFadeThresholdSize = unchecked((int)33064),
		// GL_DISTANCE_ATTENUATION_SGIS = 0x8129
		DistanceAttenuation = unchecked((int)33065),
		// GL_FOG_FUNC_POINTS_SGIS = 0x812B
		FogFuncPoints = unchecked((int)33067),
		// GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C
		MaxFogFuncPoints = unchecked((int)33068),
		// GL_PACK_SKIP_VOLUMES_SGIS = 0x8130
		PackSkipVolumes = unchecked((int)33072),
		// GL_PACK_IMAGE_DEPTH_SGIS = 0x8131
		PackImageDepth = unchecked((int)33073),
		// GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132
		UnpackSkipVolumes = unchecked((int)33074),
		// GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133
		UnpackImageDepth = unchecked((int)33075),
		// GL_TEXTURE_4D_SGIS = 0x8134
		Texture4d = unchecked((int)33076),
		// GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138
		Max4dTextureSize = unchecked((int)33080),
		// GL_PIXEL_TEX_GEN_SGIX = 0x8139
		PixelTexGen = unchecked((int)33081),
		// GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E
		PixelTileBestAlignment = unchecked((int)33086),
		// GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F
		PixelTileCacheIncrement = unchecked((int)33087),
		// GL_PIXEL_TILE_WIDTH_SGIX = 0x8140
		PixelTileWidth = unchecked((int)33088),
		// GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141
		PixelTileHeight = unchecked((int)33089),
		// GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142
		PixelTileGridWidth = unchecked((int)33090),
		// GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143
		PixelTileGridHeight = unchecked((int)33091),
		// GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144
		PixelTileGridDepth = unchecked((int)33092),
		// GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145
		PixelTileCacheSize = unchecked((int)33093),
		// GL_SPRITE_SGIX = 0x8148
		Sprite = unchecked((int)33096),
		// GL_SPRITE_MODE_SGIX = 0x8149
		SpriteMode = unchecked((int)33097),
		// GL_SPRITE_AXIS_SGIX = 0x814A
		SpriteAxis = unchecked((int)33098),
		// GL_SPRITE_TRANSLATION_SGIX = 0x814B
		SpriteTranslation = unchecked((int)33099),
		// GL_TEXTURE_4D_BINDING_SGIS = 0x814F
		Texture4dBinding = unchecked((int)33103),
		// GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177
		MaxClipmapDepth = unchecked((int)33143),
		// GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178
		MaxClipmapVirtualDepth = unchecked((int)33144),
		// GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B
		PostTextureFilterBiasRange = unchecked((int)33147),
		// GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C
		PostTextureFilterScaleRange = unchecked((int)33148),
		// GL_REFERENCE_PLANE_SGIX = 0x817D
		ReferencePlane = unchecked((int)33149),
		// GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E
		ReferencePlaneEquation = unchecked((int)33150),
		// GL_IR_INSTRUMENT1_SGIX = 0x817F
		IrInstrument1 = unchecked((int)33151),
		// GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181
		InstrumentMeasurements = unchecked((int)33153),
		// GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183
		CalligraphicFragment = unchecked((int)33155),
		// GL_FRAMEZOOM_SGIX = 0x818B
		Framezoom = unchecked((int)33163),
		// GL_FRAMEZOOM_FACTOR_SGIX = 0x818C
		FramezoomFactor = unchecked((int)33164),
		// GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D
		MaxFramezoomFactor = unchecked((int)33165),
		// GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192
		GenerateMipmapHint = unchecked((int)33170),
		// GL_DEFORMATIONS_MASK_SGIX = 0x8196
		DeformationsMask = unchecked((int)33174),
		// GL_FOG_OFFSET_SGIX = 0x8198
		FogOffset = unchecked((int)33176),
		// GL_FOG_OFFSET_VALUE_SGIX = 0x8199
		FogOffsetValue = unchecked((int)33177),
		// GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8
		LightModelColorControl = unchecked((int)33272),
		// GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB
		SharedTexturePalette = unchecked((int)33275),
		// GL_CONVOLUTION_HINT_SGIX = 0x8316
		ConvolutionHint = unchecked((int)33558),
		// GL_ASYNC_MARKER_SGIX = 0x8329
		AsyncMarker = unchecked((int)33577),
		// GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B
		PixelTexGenMode = unchecked((int)33579),
		// GL_ASYNC_HISTOGRAM_SGIX = 0x832C
		AsyncHistogram = unchecked((int)33580),
		// GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D
		MaxAsyncHistogram = unchecked((int)33581),
		// GL_PIXEL_TEXTURE_SGIS = 0x8353
		PixelTexture = unchecked((int)33619),
		// GL_ASYNC_TEX_IMAGE_SGIX = 0x835C
		AsyncTexImage = unchecked((int)33628),
		// GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D
		AsyncDrawPixels = unchecked((int)33629),
		// GL_ASYNC_READ_PIXELS_SGIX = 0x835E
		AsyncReadPixels = unchecked((int)33630),
		// GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F
		MaxAsyncTexImage = unchecked((int)33631),
		// GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360
		MaxAsyncDrawPixels = unchecked((int)33632),
		// GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361
		MaxAsyncReadPixels = unchecked((int)33633),
		// GL_VERTEX_PRECLIP_SGIX = 0x83EE
		VertexPreclip = unchecked((int)33774),
		// GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF
		VertexPreclipHint = unchecked((int)33775),
		// GL_FRAGMENT_LIGHTING_SGIX = 0x8400
		FragmentLighting = unchecked((int)33792),
		// GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401
		FragmentColorMaterial = unchecked((int)33793),
		// GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402
		FragmentColorMaterialFace = unchecked((int)33794),
		// GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403
		FragmentColorMaterialParameter = unchecked((int)33795),
		// GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404
		MaxFragmentLights = unchecked((int)33796),
		// GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405
		MaxActiveLights = unchecked((int)33797),
		// GL_LIGHT_ENV_MODE_SGIX = 0x8407
		LightEnvMode = unchecked((int)33799),
		// GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408
		FragmentLightModelLocalViewer = unchecked((int)33800),
		// GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409
		FragmentLightModelTwoSide = unchecked((int)33801),
		// GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A
		FragmentLightModelAmbient = unchecked((int)33802),
		// GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B
		FragmentLightModelNormalInterpolation = unchecked((int)33803),
		// GL_FRAGMENT_LIGHT0_SGIX = 0x840C
		FragmentLight0 = unchecked((int)33804),
		// GL_PACK_RESAMPLE_SGIX = 0x842E
		PackResample = unchecked((int)33838),
		// GL_UNPACK_RESAMPLE_SGIX = 0x842F
		UnpackResample = unchecked((int)33839),
		// GL_ALIASED_POINT_SIZE_RANGE = 0x846D
		AliasedPointSizeRange = unchecked((int)33901),
		// GL_ALIASED_LINE_WIDTH_RANGE = 0x846E
		AliasedLineWidthRange = unchecked((int)33902),
		// GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0
		PackSubsampleRate = unchecked((int)34208),
		// GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1
		UnpackSubsampleRate = unchecked((int)34209),
	}
	public enum GetPointervPName
	{
		// GL_FEEDBACK_BUFFER_POINTER = 0xDF0
		FeedbackBufferPointer = unchecked((int)3568),
		// GL_SELECTION_BUFFER_POINTER = 0xDF3
		SelectionBufferPointer = unchecked((int)3571),
		// GL_VERTEX_ARRAY_POINTER = 0x808E
		// GL_VERTEX_ARRAY_POINTER_EXT = 0x808E
		VertexArrayPointer = unchecked((int)32910),
		// GL_NORMAL_ARRAY_POINTER = 0x808F
		// GL_NORMAL_ARRAY_POINTER_EXT = 0x808F
		NormalArrayPointer = unchecked((int)32911),
		// GL_COLOR_ARRAY_POINTER = 0x8090
		// GL_COLOR_ARRAY_POINTER_EXT = 0x8090
		ColorArrayPointer = unchecked((int)32912),
		// GL_INDEX_ARRAY_POINTER = 0x8091
		// GL_INDEX_ARRAY_POINTER_EXT = 0x8091
		IndexArrayPointer = unchecked((int)32913),
		// GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092
		// GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092
		TextureCoordArrayPointer = unchecked((int)32914),
		// GL_EDGE_FLAG_ARRAY_POINTER = 0x8093
		// GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093
		EdgeFlagArrayPointer = unchecked((int)32915),
		// GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180
		InstrumentBufferPointer = unchecked((int)33152),
	}
	public enum GetTextureParameter
	{
		// GL_TEXTURE_WIDTH = 0x1000
		TextureWidth = unchecked((int)4096),
		// GL_TEXTURE_HEIGHT = 0x1001
		TextureHeight = unchecked((int)4097),
		// GL_TEXTURE_COMPONENTS = 0x1003
		TextureComponents = unchecked((int)4099),
		// GL_TEXTURE_INTERNAL_FORMAT = 0x1003
		TextureInternalFormat = unchecked((int)4099),
		// GL_TEXTURE_BORDER_COLOR = 0x1004
		// GL_TEXTURE_BORDER_COLOR_NV = 0x1004
		TextureBorderColor = unchecked((int)4100),
		// GL_TEXTURE_BORDER = 0x1005
		TextureBorder = unchecked((int)4101),
		// GL_TEXTURE_MAG_FILTER = 0x2800
		TextureMagFilter = unchecked((int)10240),
		// GL_TEXTURE_MIN_FILTER = 0x2801
		TextureMinFilter = unchecked((int)10241),
		// GL_TEXTURE_WRAP_S = 0x2802
		TextureWrapS = unchecked((int)10242),
		// GL_TEXTURE_WRAP_T = 0x2803
		TextureWrapT = unchecked((int)10243),
		// GL_TEXTURE_RED_SIZE = 0x805C
		TextureRedSize = unchecked((int)32860),
		// GL_TEXTURE_GREEN_SIZE = 0x805D
		TextureGreenSize = unchecked((int)32861),
		// GL_TEXTURE_BLUE_SIZE = 0x805E
		TextureBlueSize = unchecked((int)32862),
		// GL_TEXTURE_ALPHA_SIZE = 0x805F
		TextureAlphaSize = unchecked((int)32863),
		// GL_TEXTURE_LUMINANCE_SIZE = 0x8060
		TextureLuminanceSize = unchecked((int)32864),
		// GL_TEXTURE_INTENSITY_SIZE = 0x8061
		TextureIntensitySize = unchecked((int)32865),
		// GL_TEXTURE_PRIORITY = 0x8066
		TexturePriority = unchecked((int)32870),
		// GL_TEXTURE_RESIDENT = 0x8067
		TextureResident = unchecked((int)32871),
		// GL_TEXTURE_DEPTH_EXT = 0x8071
		TextureDepth = unchecked((int)32881),
		// GL_TEXTURE_WRAP_R_EXT = 0x8072
		TextureWrapR = unchecked((int)32882),
		// GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A
		DetailTextureLevel = unchecked((int)32922),
		// GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B
		DetailTextureMode = unchecked((int)32923),
		// GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C
		DetailTextureFuncPoints = unchecked((int)32924),
		// GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0
		SharpenTextureFuncPoints = unchecked((int)32944),
		// GL_SHADOW_AMBIENT_SGIX = 0x80BF
		ShadowAmbient = unchecked((int)32959),
		// GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124
		DualTextureSelect = unchecked((int)33060),
		// GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125
		QuadTextureSelect = unchecked((int)33061),
		// GL_TEXTURE_4DSIZE_SGIS = 0x8136
		Texture4dsize = unchecked((int)33078),
		// GL_TEXTURE_WRAP_Q_SGIS = 0x8137
		TextureWrapQ = unchecked((int)33079),
		// GL_TEXTURE_MIN_LOD_SGIS = 0x813A
		TextureMinLod = unchecked((int)33082),
		// GL_TEXTURE_MAX_LOD_SGIS = 0x813B
		TextureMaxLod = unchecked((int)33083),
		// GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C
		TextureBaseLevel = unchecked((int)33084),
		// GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D
		TextureMaxLevel = unchecked((int)33085),
		// GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147
		TextureFilter4Size = unchecked((int)33095),
		// GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171
		TextureClipmapCenter = unchecked((int)33137),
		// GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172
		TextureClipmapFrame = unchecked((int)33138),
		// GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173
		TextureClipmapOffset = unchecked((int)33139),
		// GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174
		TextureClipmapVirtualDepth = unchecked((int)33140),
		// GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175
		TextureClipmapLodOffset = unchecked((int)33141),
		// GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176
		TextureClipmapDepth = unchecked((int)33142),
		// GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179
		PostTextureFilterBias = unchecked((int)33145),
		// GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A
		PostTextureFilterScale = unchecked((int)33146),
		// GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E
		TextureLodBiasS = unchecked((int)33166),
		// GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F
		TextureLodBiasT = unchecked((int)33167),
		// GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190
		TextureLodBiasR = unchecked((int)33168),
		// GL_GENERATE_MIPMAP_SGIS = 0x8191
		GenerateMipmap = unchecked((int)33169),
		// GL_TEXTURE_COMPARE_SGIX = 0x819A
		TextureCompare = unchecked((int)33178),
		// GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B
		TextureCompareOperator = unchecked((int)33179),
		// GL_TEXTURE_LEQUAL_R_SGIX = 0x819C
		TextureLequalR = unchecked((int)33180),
		// GL_TEXTURE_GEQUAL_R_SGIX = 0x819D
		TextureGequalR = unchecked((int)33181),
		// GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369
		TextureMaxClampS = unchecked((int)33641),
		// GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A
		TextureMaxClampT = unchecked((int)33642),
		// GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B
		TextureMaxClampR = unchecked((int)33643),
	}
	public enum HintMode
	{
		// GL_DONT_CARE = 0x1100
		DontCare = unchecked((int)4352),
		// GL_FASTEST = 0x1101
		Fastest = unchecked((int)4353),
		// GL_NICEST = 0x1102
		Nicest = unchecked((int)4354),
	}
	public enum HintTarget
	{
		// GL_PERSPECTIVE_CORRECTION_HINT = 0xC50
		PerspectiveCorrectionHint = unchecked((int)3152),
		// GL_POINT_SMOOTH_HINT = 0xC51
		PointSmoothHint = unchecked((int)3153),
		// GL_LINE_SMOOTH_HINT = 0xC52
		LineSmoothHint = unchecked((int)3154),
		// GL_POLYGON_SMOOTH_HINT = 0xC53
		PolygonSmoothHint = unchecked((int)3155),
		// GL_FOG_HINT = 0xC54
		FogHint = unchecked((int)3156),
		// GL_PACK_CMYK_HINT_EXT = 0x800E
		PackCmykHint = unchecked((int)32782),
		// GL_UNPACK_CMYK_HINT_EXT = 0x800F
		UnpackCmykHint = unchecked((int)32783),
		// GL_PHONG_HINT_WIN = 0x80EB
		PhongHint = unchecked((int)33003),
		// GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0
		ClipVolumeClippingHint = unchecked((int)33008),
		// GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E
		TextureMultiBufferHint = unchecked((int)33070),
		// GL_GENERATE_MIPMAP_HINT = 0x8192
		// GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192
		GenerateMipmapHint = unchecked((int)33170),
		// GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257
		ProgramBinaryRetrievableHint = unchecked((int)33367),
		// GL_CONVOLUTION_HINT_SGIX = 0x8316
		ConvolutionHint = unchecked((int)33558),
		// GL_SCALEBIAS_HINT_SGIX = 0x8322
		ScalebiasHint = unchecked((int)33570),
		// GL_LINE_QUALITY_HINT_SGIX = 0x835B
		LineQualityHint = unchecked((int)33627),
		// GL_VERTEX_PRECLIP_SGIX = 0x83EE
		VertexPreclip = unchecked((int)33774),
		// GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF
		VertexPreclipHint = unchecked((int)33775),
		// GL_TEXTURE_COMPRESSION_HINT = 0x84EF
		// GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF
		TextureCompressionHint = unchecked((int)34031),
		// GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F
		VertexArrayStorageHint = unchecked((int)34079),
		// GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534
		MultisampleFilterHint = unchecked((int)34100),
		// GL_TRANSFORM_HINT_APPLE = 0x85B1
		TransformHint = unchecked((int)34225),
		// GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC
		TextureStorageHint = unchecked((int)34236),
		// GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B
		// GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B
		// GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B
		FragmentShaderDerivativeHint = unchecked((int)35723),
		// GL_BINNING_CONTROL_HINT_QCOM = 0x8FB0
		BinningControlHintQcom = unchecked((int)36784),
		// GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8
		PreferDoublebufferHint = unchecked((int)107000),
		// GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD
		ConserveMemoryHint = unchecked((int)107005),
		// GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE
		ReclaimMemoryHint = unchecked((int)107006),
		// GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203
		NativeGraphicsBeginHint = unchecked((int)107011),
		// GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204
		NativeGraphicsEndHint = unchecked((int)107012),
		// GL_ALWAYS_FAST_HINT_PGI = 0x1A20C
		AlwaysFastHint = unchecked((int)107020),
		// GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D
		AlwaysSoftHint = unchecked((int)107021),
		// GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E
		AllowDrawObjHint = unchecked((int)107022),
		// GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F
		AllowDrawWinHint = unchecked((int)107023),
		// GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210
		AllowDrawFrgHint = unchecked((int)107024),
		// GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211
		AllowDrawMemHint = unchecked((int)107025),
		// GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216
		StrictDepthfuncHint = unchecked((int)107030),
		// GL_STRICT_LIGHTING_HINT_PGI = 0x1A217
		StrictLightingHint = unchecked((int)107031),
		// GL_STRICT_SCISSOR_HINT_PGI = 0x1A218
		StrictScissorHint = unchecked((int)107032),
		// GL_FULL_STIPPLE_HINT_PGI = 0x1A219
		FullStippleHint = unchecked((int)107033),
		// GL_CLIP_NEAR_HINT_PGI = 0x1A220
		ClipNearHint = unchecked((int)107040),
		// GL_CLIP_FAR_HINT_PGI = 0x1A221
		ClipFarHint = unchecked((int)107041),
		// GL_WIDE_LINE_HINT_PGI = 0x1A222
		WideLineHint = unchecked((int)107042),
		// GL_BACK_NORMALS_HINT_PGI = 0x1A223
		BackNormalsHint = unchecked((int)107043),
		// GL_VERTEX_DATA_HINT_PGI = 0x1A22A
		VertexDataHint = unchecked((int)107050),
		// GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B
		VertexConsistentHint = unchecked((int)107051),
		// GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C
		MaterialSideHint = unchecked((int)107052),
		// GL_MAX_VERTEX_HINT_PGI = 0x1A22D
		MaxVertexHint = unchecked((int)107053),
	}
	public enum IndexPointerType
	{
		// GL_SHORT = 0x1402
		Short = unchecked((int)5122),
		// GL_INT = 0x1404
		Int = unchecked((int)5124),
		// GL_FLOAT = 0x1406
		Float = unchecked((int)5126),
		// GL_DOUBLE = 0x140A
		Double = unchecked((int)5130),
	}
	public enum LightName
	{
		// GL_LIGHT0 = 0x4000
		Light0 = unchecked((int)16384),
		// GL_LIGHT1 = 0x4001
		Light1 = unchecked((int)16385),
		// GL_LIGHT2 = 0x4002
		Light2 = unchecked((int)16386),
		// GL_LIGHT3 = 0x4003
		Light3 = unchecked((int)16387),
		// GL_LIGHT4 = 0x4004
		Light4 = unchecked((int)16388),
		// GL_LIGHT5 = 0x4005
		Light5 = unchecked((int)16389),
		// GL_LIGHT6 = 0x4006
		Light6 = unchecked((int)16390),
		// GL_LIGHT7 = 0x4007
		Light7 = unchecked((int)16391),
		// GL_FRAGMENT_LIGHT0_SGIX = 0x840C
		FragmentLight0 = unchecked((int)33804),
		// GL_FRAGMENT_LIGHT1_SGIX = 0x840D
		FragmentLight1 = unchecked((int)33805),
		// GL_FRAGMENT_LIGHT2_SGIX = 0x840E
		FragmentLight2 = unchecked((int)33806),
		// GL_FRAGMENT_LIGHT3_SGIX = 0x840F
		FragmentLight3 = unchecked((int)33807),
		// GL_FRAGMENT_LIGHT4_SGIX = 0x8410
		FragmentLight4 = unchecked((int)33808),
		// GL_FRAGMENT_LIGHT5_SGIX = 0x8411
		FragmentLight5 = unchecked((int)33809),
		// GL_FRAGMENT_LIGHT6_SGIX = 0x8412
		FragmentLight6 = unchecked((int)33810),
		// GL_FRAGMENT_LIGHT7_SGIX = 0x8413
		FragmentLight7 = unchecked((int)33811),
	}
	public enum LightParameter
	{
		// GL_AMBIENT = 0x1200
		Ambient = unchecked((int)4608),
		// GL_DIFFUSE = 0x1201
		Diffuse = unchecked((int)4609),
		// GL_SPECULAR = 0x1202
		Specular = unchecked((int)4610),
		// GL_POSITION = 0x1203
		Position = unchecked((int)4611),
		// GL_SPOT_DIRECTION = 0x1204
		SpotDirection = unchecked((int)4612),
		// GL_SPOT_EXPONENT = 0x1205
		SpotExponent = unchecked((int)4613),
		// GL_SPOT_CUTOFF = 0x1206
		SpotCutoff = unchecked((int)4614),
		// GL_CONSTANT_ATTENUATION = 0x1207
		ConstantAttenuation = unchecked((int)4615),
		// GL_LINEAR_ATTENUATION = 0x1208
		LinearAttenuation = unchecked((int)4616),
		// GL_QUADRATIC_ATTENUATION = 0x1209
		QuadraticAttenuation = unchecked((int)4617),
	}
	public enum ListParameterName
	{
		// GL_LIST_PRIORITY_SGIX = 0x8182
		ListPriority = unchecked((int)33154),
	}
	public enum LogicOp
	{
		// GL_CLEAR = 0x1500
		Clear = unchecked((int)5376),
		// GL_AND = 0x1501
		And = unchecked((int)5377),
		// GL_AND_REVERSE = 0x1502
		AndReverse = unchecked((int)5378),
		// GL_COPY = 0x1503
		Copy = unchecked((int)5379),
		// GL_AND_INVERTED = 0x1504
		AndInverted = unchecked((int)5380),
		// GL_NOOP = 0x1505
		Noop = unchecked((int)5381),
		// GL_XOR = 0x1506
		Xor = unchecked((int)5382),
		// GL_OR = 0x1507
		Or = unchecked((int)5383),
		// GL_NOR = 0x1508
		Nor = unchecked((int)5384),
		// GL_EQUIV = 0x1509
		Equiv = unchecked((int)5385),
		// GL_INVERT = 0x150A
		Invert = unchecked((int)5386),
		// GL_OR_REVERSE = 0x150B
		OrReverse = unchecked((int)5387),
		// GL_COPY_INVERTED = 0x150C
		CopyInverted = unchecked((int)5388),
		// GL_OR_INVERTED = 0x150D
		OrInverted = unchecked((int)5389),
		// GL_NAND = 0x150E
		Nand = unchecked((int)5390),
		// GL_SET = 0x150F
		Set = unchecked((int)5391),
	}
	public enum MaterialFace
	{
		// GL_FRONT = 0x404
		Front = unchecked((int)1028),
		// GL_BACK = 0x405
		Back = unchecked((int)1029),
		// GL_FRONT_AND_BACK = 0x408
		FrontAndBack = unchecked((int)1032),
	}
	public enum MaterialParameter
	{
		// GL_AMBIENT = 0x1200
		Ambient = unchecked((int)4608),
		// GL_DIFFUSE = 0x1201
		Diffuse = unchecked((int)4609),
		// GL_SPECULAR = 0x1202
		Specular = unchecked((int)4610),
		// GL_EMISSION = 0x1600
		Emission = unchecked((int)5632),
		// GL_SHININESS = 0x1601
		Shininess = unchecked((int)5633),
		// GL_AMBIENT_AND_DIFFUSE = 0x1602
		AmbientAndDiffuse = unchecked((int)5634),
		// GL_COLOR_INDEXES = 0x1603
		ColorIndexes = unchecked((int)5635),
	}
	public enum MatrixMode
	{
		// GL_MODELVIEW = 0x1700
		Modelview = unchecked((int)5888),
		// GL_MODELVIEW0_EXT = 0x1700
		Modelview0 = unchecked((int)5888),
		// GL_PROJECTION = 0x1701
		Projection = unchecked((int)5889),
		// GL_TEXTURE = 0x1702
		Texture = unchecked((int)5890),
	}
	public enum NormalPointerType
	{
		// GL_BYTE = 0x1400
		Byte = unchecked((int)5120),
		// GL_SHORT = 0x1402
		Short = unchecked((int)5122),
		// GL_INT = 0x1404
		Int = unchecked((int)5124),
		// GL_FLOAT = 0x1406
		Float = unchecked((int)5126),
		// GL_DOUBLE = 0x140A
		Double = unchecked((int)5130),
	}
	public enum PixelFormat
	{
		// GL_UNSIGNED_SHORT = 0x1403
		UnsignedShort = unchecked((int)5123),
		// GL_UNSIGNED_INT = 0x1405
		UnsignedInt = unchecked((int)5125),
		// GL_COLOR_INDEX = 0x1900
		ColorIndex = unchecked((int)6400),
		// GL_STENCIL_INDEX = 0x1901
		StencilIndex = unchecked((int)6401),
		// GL_DEPTH_COMPONENT = 0x1902
		DepthComponent = unchecked((int)6402),
		// GL_RED = 0x1903
		// GL_RED_EXT = 0x1903
		Red = unchecked((int)6403),
		// GL_GREEN = 0x1904
		Green = unchecked((int)6404),
		// GL_BLUE = 0x1905
		Blue = unchecked((int)6405),
		// GL_ALPHA = 0x1906
		Alpha = unchecked((int)6406),
		// GL_RGB = 0x1907
		Rgb = unchecked((int)6407),
		// GL_RGBA = 0x1908
		Rgba = unchecked((int)6408),
		// GL_LUMINANCE = 0x1909
		Luminance = unchecked((int)6409),
		// GL_LUMINANCE_ALPHA = 0x190A
		LuminanceAlpha = unchecked((int)6410),
		// GL_ABGR_EXT = 0x8000
		Abgr = unchecked((int)32768),
		// GL_CMYK_EXT = 0x800C
		Cmyk = unchecked((int)32780),
		// GL_CMYKA_EXT = 0x800D
		Cmyka = unchecked((int)32781),
		// GL_YCRCB_422_SGIX = 0x81BB
		Ycrcb422 = unchecked((int)33211),
		// GL_YCRCB_444_SGIX = 0x81BC
		Ycrcb444 = unchecked((int)33212),
	}
	public enum PixelStoreParameter
	{
		// GL_UNPACK_SWAP_BYTES = 0xCF0
		UnpackSwapBytes = unchecked((int)3312),
		// GL_UNPACK_LSB_FIRST = 0xCF1
		UnpackLsbFirst = unchecked((int)3313),
		// GL_UNPACK_ROW_LENGTH = 0xCF2
		// GL_UNPACK_ROW_LENGTH_EXT = 0xCF2
		UnpackRowLength = unchecked((int)3314),
		// GL_UNPACK_SKIP_ROWS = 0xCF3
		// GL_UNPACK_SKIP_ROWS_EXT = 0xCF3
		UnpackSkipRows = unchecked((int)3315),
		// GL_UNPACK_SKIP_PIXELS = 0xCF4
		// GL_UNPACK_SKIP_PIXELS_EXT = 0xCF4
		UnpackSkipPixels = unchecked((int)3316),
		// GL_UNPACK_ALIGNMENT = 0xCF5
		UnpackAlignment = unchecked((int)3317),
		// GL_PACK_SWAP_BYTES = 0xD00
		PackSwapBytes = unchecked((int)3328),
		// GL_PACK_LSB_FIRST = 0xD01
		PackLsbFirst = unchecked((int)3329),
		// GL_PACK_ROW_LENGTH = 0xD02
		PackRowLength = unchecked((int)3330),
		// GL_PACK_SKIP_ROWS = 0xD03
		PackSkipRows = unchecked((int)3331),
		// GL_PACK_SKIP_PIXELS = 0xD04
		PackSkipPixels = unchecked((int)3332),
		// GL_PACK_ALIGNMENT = 0xD05
		PackAlignment = unchecked((int)3333),
		// GL_PACK_SKIP_IMAGES = 0x806B
		// GL_PACK_SKIP_IMAGES_EXT = 0x806B
		PackSkipImages = unchecked((int)32875),
		// GL_PACK_IMAGE_HEIGHT = 0x806C
		// GL_PACK_IMAGE_HEIGHT_EXT = 0x806C
		PackImageHeight = unchecked((int)32876),
		// GL_UNPACK_SKIP_IMAGES = 0x806D
		// GL_UNPACK_SKIP_IMAGES_EXT = 0x806D
		UnpackSkipImages = unchecked((int)32877),
		// GL_UNPACK_IMAGE_HEIGHT = 0x806E
		// GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E
		UnpackImageHeight = unchecked((int)32878),
		// GL_PACK_SKIP_VOLUMES_SGIS = 0x8130
		PackSkipVolumes = unchecked((int)33072),
		// GL_PACK_IMAGE_DEPTH_SGIS = 0x8131
		PackImageDepth = unchecked((int)33073),
		// GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132
		UnpackSkipVolumes = unchecked((int)33074),
		// GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133
		UnpackImageDepth = unchecked((int)33075),
		// GL_PIXEL_TILE_WIDTH_SGIX = 0x8140
		PixelTileWidth = unchecked((int)33088),
		// GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141
		PixelTileHeight = unchecked((int)33089),
		// GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142
		PixelTileGridWidth = unchecked((int)33090),
		// GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143
		PixelTileGridHeight = unchecked((int)33091),
		// GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144
		PixelTileGridDepth = unchecked((int)33092),
		// GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145
		PixelTileCacheSize = unchecked((int)33093),
		// GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0
		PackSubsampleRate = unchecked((int)34208),
		// GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1
		UnpackSubsampleRate = unchecked((int)34209),
		// GL_PACK_RESAMPLE_OML = 0x8984
		// GL_PACK_RESAMPLE_SGIX = 0x842E
		PackResample = unchecked((int)35204),
		// GL_UNPACK_RESAMPLE_OML = 0x8985
		// GL_UNPACK_RESAMPLE_SGIX = 0x842F
		UnpackResample = unchecked((int)35205),
	}
	public enum PixelType
	{
		// GL_BYTE = 0x1400
		Byte = unchecked((int)5120),
		// GL_UNSIGNED_BYTE = 0x1401
		UnsignedByte = unchecked((int)5121),
		// GL_SHORT = 0x1402
		Short = unchecked((int)5122),
		// GL_UNSIGNED_SHORT = 0x1403
		UnsignedShort = unchecked((int)5123),
		// GL_INT = 0x1404
		Int = unchecked((int)5124),
		// GL_UNSIGNED_INT = 0x1405
		UnsignedInt = unchecked((int)5125),
		// GL_FLOAT = 0x1406
		Float = unchecked((int)5126),
		// GL_BITMAP = 0x1A00
		Bitmap = unchecked((int)6656),
		// GL_UNSIGNED_BYTE_3_3_2 = 0x8032
		// GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032
		UnsignedByte332 = unchecked((int)32818),
		// GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033
		// GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033
		UnsignedShort4444 = unchecked((int)32819),
		// GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034
		// GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034
		UnsignedShort5551 = unchecked((int)32820),
		// GL_UNSIGNED_INT_8_8_8_8 = 0x8035
		// GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035
		UnsignedInt8888 = unchecked((int)32821),
		// GL_UNSIGNED_INT_10_10_10_2 = 0x8036
		// GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036
		UnsignedInt1010102 = unchecked((int)32822),
	}
	public enum PolygonMode
	{
		// GL_POINT = 0x1B00
		Point = unchecked((int)6912),
		// GL_LINE = 0x1B01
		Line = unchecked((int)6913),
		// GL_FILL = 0x1B02
		Fill = unchecked((int)6914),
	}
	public enum PrimitiveType
	{
		// GL_POINTS = 0x0
		Points = unchecked((int)0),
		// GL_LINES = 0x1
		Lines = unchecked((int)1),
		// GL_LINE_LOOP = 0x2
		LineLoop = unchecked((int)2),
		// GL_LINE_STRIP = 0x3
		LineStrip = unchecked((int)3),
		// GL_TRIANGLES = 0x4
		Triangles = unchecked((int)4),
		// GL_TRIANGLE_STRIP = 0x5
		TriangleStrip = unchecked((int)5),
		// GL_TRIANGLE_FAN = 0x6
		TriangleFan = unchecked((int)6),
		// GL_QUADS = 0x7
		// GL_QUADS_EXT = 0x7
		Quads = unchecked((int)7),
		// GL_QUAD_STRIP = 0x8
		QuadStrip = unchecked((int)8),
		// GL_POLYGON = 0x9
		Polygon = unchecked((int)9),
		// GL_LINES_ADJACENCY = 0xA
		// GL_LINES_ADJACENCY_ARB = 0xA
		// GL_LINES_ADJACENCY_EXT = 0xA
		LinesAdjacency = unchecked((int)10),
		// GL_LINE_STRIP_ADJACENCY = 0xB
		// GL_LINE_STRIP_ADJACENCY_ARB = 0xB
		// GL_LINE_STRIP_ADJACENCY_EXT = 0xB
		LineStripAdjacency = unchecked((int)11),
		// GL_TRIANGLES_ADJACENCY = 0xC
		// GL_TRIANGLES_ADJACENCY_ARB = 0xC
		// GL_TRIANGLES_ADJACENCY_EXT = 0xC
		TrianglesAdjacency = unchecked((int)12),
		// GL_TRIANGLE_STRIP_ADJACENCY = 0xD
		// GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0xD
		// GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0xD
		TriangleStripAdjacency = unchecked((int)13),
		// GL_PATCHES = 0xE
		// GL_PATCHES_EXT = 0xE
		Patches = unchecked((int)14),
	}
	public enum ReadBufferMode
	{
		// GL_FRONT_LEFT = 0x400
		FrontLeft = unchecked((int)1024),
		// GL_FRONT_RIGHT = 0x401
		FrontRight = unchecked((int)1025),
		// GL_BACK_LEFT = 0x402
		BackLeft = unchecked((int)1026),
		// GL_BACK_RIGHT = 0x403
		BackRight = unchecked((int)1027),
		// GL_FRONT = 0x404
		Front = unchecked((int)1028),
		// GL_BACK = 0x405
		Back = unchecked((int)1029),
		// GL_LEFT = 0x406
		Left = unchecked((int)1030),
		// GL_RIGHT = 0x407
		Right = unchecked((int)1031),
		// GL_AUX0 = 0x409
		Aux0 = unchecked((int)1033),
		// GL_AUX1 = 0x40A
		Aux1 = unchecked((int)1034),
		// GL_AUX2 = 0x40B
		Aux2 = unchecked((int)1035),
		// GL_AUX3 = 0x40C
		Aux3 = unchecked((int)1036),
	}
	public enum StencilFaceDirection
	{
		// GL_FRONT = 0x404
		Front = unchecked((int)1028),
		// GL_BACK = 0x405
		Back = unchecked((int)1029),
		// GL_FRONT_AND_BACK = 0x408
		FrontAndBack = unchecked((int)1032),
	}
	public enum StencilFunction
	{
		// GL_NEVER = 0x200
		Never = unchecked((int)512),
		// GL_LESS = 0x201
		Less = unchecked((int)513),
		// GL_EQUAL = 0x202
		Equal = unchecked((int)514),
		// GL_LEQUAL = 0x203
		Lequal = unchecked((int)515),
		// GL_GREATER = 0x204
		Greater = unchecked((int)516),
		// GL_NOTEQUAL = 0x205
		Notequal = unchecked((int)517),
		// GL_GEQUAL = 0x206
		Gequal = unchecked((int)518),
		// GL_ALWAYS = 0x207
		Always = unchecked((int)519),
	}
	public enum StencilOp
	{
		// GL_ZERO = 0x0
		Zero = unchecked((int)0),
		// GL_INVERT = 0x150A
		Invert = unchecked((int)5386),
		// GL_KEEP = 0x1E00
		Keep = unchecked((int)7680),
		// GL_REPLACE = 0x1E01
		Replace = unchecked((int)7681),
		// GL_INCR = 0x1E02
		Incr = unchecked((int)7682),
		// GL_DECR = 0x1E03
		Decr = unchecked((int)7683),
	}
	public enum StringName
	{
		// GL_VENDOR = 0x1F00
		Vendor = unchecked((int)7936),
		// GL_RENDERER = 0x1F01
		Renderer = unchecked((int)7937),
		// GL_VERSION = 0x1F02
		Version = unchecked((int)7938),
		// GL_EXTENSIONS = 0x1F03
		Extensions = unchecked((int)7939),
	}
	public enum TexCoordPointerType
	{
		// GL_SHORT = 0x1402
		Short = unchecked((int)5122),
		// GL_INT = 0x1404
		Int = unchecked((int)5124),
		// GL_FLOAT = 0x1406
		Float = unchecked((int)5126),
		// GL_DOUBLE = 0x140A
		Double = unchecked((int)5130),
	}
	public enum TextureCoordName
	{
		// GL_S = 0x2000
		S = unchecked((int)8192),
		// GL_T = 0x2001
		T = unchecked((int)8193),
		// GL_R = 0x2002
		R = unchecked((int)8194),
		// GL_Q = 0x2003
		Q = unchecked((int)8195),
	}
	public enum TextureEnvParameter
	{
		// GL_TEXTURE_ENV_MODE = 0x2200
		TextureEnvMode = unchecked((int)8704),
		// GL_TEXTURE_ENV_COLOR = 0x2201
		TextureEnvColor = unchecked((int)8705),
	}
	public enum TextureEnvTarget
	{
		// GL_TEXTURE_ENV = 0x2300
		TextureEnv = unchecked((int)8960),
	}
	public enum TextureGenParameter
	{
		// GL_TEXTURE_GEN_MODE = 0x2500
		TextureGenMode = unchecked((int)9472),
		// GL_OBJECT_PLANE = 0x2501
		ObjectPlane = unchecked((int)9473),
		// GL_EYE_PLANE = 0x2502
		EyePlane = unchecked((int)9474),
		// GL_EYE_POINT_SGIS = 0x81F4
		EyePoint = unchecked((int)33268),
		// GL_OBJECT_POINT_SGIS = 0x81F5
		ObjectPoint = unchecked((int)33269),
		// GL_EYE_LINE_SGIS = 0x81F6
		EyeLine = unchecked((int)33270),
		// GL_OBJECT_LINE_SGIS = 0x81F7
		ObjectLine = unchecked((int)33271),
	}
	public enum TextureParameterName
	{
		// GL_TEXTURE_BORDER_COLOR = 0x1004
		TextureBorderColor = unchecked((int)4100),
		// GL_TEXTURE_MAG_FILTER = 0x2800
		TextureMagFilter = unchecked((int)10240),
		// GL_TEXTURE_MIN_FILTER = 0x2801
		TextureMinFilter = unchecked((int)10241),
		// GL_TEXTURE_WRAP_S = 0x2802
		TextureWrapS = unchecked((int)10242),
		// GL_TEXTURE_WRAP_T = 0x2803
		TextureWrapT = unchecked((int)10243),
		// GL_TEXTURE_PRIORITY = 0x8066
		// GL_TEXTURE_PRIORITY_EXT = 0x8066
		TexturePriority = unchecked((int)32870),
		// GL_TEXTURE_WRAP_R = 0x8072
		// GL_TEXTURE_WRAP_R_EXT = 0x8072
		// GL_TEXTURE_WRAP_R_OES = 0x8072
		TextureWrapR = unchecked((int)32882),
		// GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A
		DetailTextureLevel = unchecked((int)32922),
		// GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B
		DetailTextureMode = unchecked((int)32923),
		// GL_SHADOW_AMBIENT_SGIX = 0x80BF
		ShadowAmbient = unchecked((int)32959),
		// GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124
		DualTextureSelect = unchecked((int)33060),
		// GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125
		QuadTextureSelect = unchecked((int)33061),
		// GL_TEXTURE_WRAP_Q_SGIS = 0x8137
		TextureWrapQ = unchecked((int)33079),
		// GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171
		TextureClipmapCenter = unchecked((int)33137),
		// GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172
		TextureClipmapFrame = unchecked((int)33138),
		// GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173
		TextureClipmapOffset = unchecked((int)33139),
		// GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174
		TextureClipmapVirtualDepth = unchecked((int)33140),
		// GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175
		TextureClipmapLodOffset = unchecked((int)33141),
		// GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176
		TextureClipmapDepth = unchecked((int)33142),
		// GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179
		PostTextureFilterBias = unchecked((int)33145),
		// GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A
		PostTextureFilterScale = unchecked((int)33146),
		// GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E
		TextureLodBiasS = unchecked((int)33166),
		// GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F
		TextureLodBiasT = unchecked((int)33167),
		// GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190
		TextureLodBiasR = unchecked((int)33168),
		// GL_GENERATE_MIPMAP = 0x8191
		// GL_GENERATE_MIPMAP_SGIS = 0x8191
		GenerateMipmap = unchecked((int)33169),
		// GL_TEXTURE_COMPARE_SGIX = 0x819A
		TextureCompare = unchecked((int)33178),
		// GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369
		TextureMaxClampS = unchecked((int)33641),
		// GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A
		TextureMaxClampT = unchecked((int)33642),
		// GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B
		TextureMaxClampR = unchecked((int)33643),
	}
	public enum TextureTarget
	{
		// GL_TEXTURE_1D = 0xDE0
		Texture1d = unchecked((int)3552),
		// GL_TEXTURE_2D = 0xDE1
		Texture2d = unchecked((int)3553),
		// GL_PROXY_TEXTURE_1D = 0x8063
		// GL_PROXY_TEXTURE_1D_EXT = 0x8063
		ProxyTexture1d = unchecked((int)32867),
		// GL_PROXY_TEXTURE_2D = 0x8064
		// GL_PROXY_TEXTURE_2D_EXT = 0x8064
		ProxyTexture2d = unchecked((int)32868),
		// GL_TEXTURE_3D = 0x806F
		// GL_TEXTURE_3D_EXT = 0x806F
		// GL_TEXTURE_3D_OES = 0x806F
		Texture3d = unchecked((int)32879),
		// GL_PROXY_TEXTURE_3D = 0x8070
		// GL_PROXY_TEXTURE_3D_EXT = 0x8070
		ProxyTexture3d = unchecked((int)32880),
		// GL_DETAIL_TEXTURE_2D_SGIS = 0x8095
		DetailTexture2d = unchecked((int)32917),
		// GL_TEXTURE_4D_SGIS = 0x8134
		Texture4d = unchecked((int)33076),
		// GL_PROXY_TEXTURE_4D_SGIS = 0x8135
		ProxyTexture4d = unchecked((int)33077),
		// GL_TEXTURE_MIN_LOD = 0x813A
		// GL_TEXTURE_MIN_LOD_SGIS = 0x813A
		TextureMinLod = unchecked((int)33082),
		// GL_TEXTURE_MAX_LOD = 0x813B
		// GL_TEXTURE_MAX_LOD_SGIS = 0x813B
		TextureMaxLod = unchecked((int)33083),
		// GL_TEXTURE_BASE_LEVEL = 0x813C
		// GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C
		TextureBaseLevel = unchecked((int)33084),
		// GL_TEXTURE_MAX_LEVEL = 0x813D
		// GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D
		TextureMaxLevel = unchecked((int)33085),
	}
	public enum TextureUnit
	{
		// GL_TEXTURE0 = 0x84C0
		// GL_TEXTURE0_ARB = 0x84C0
		Texture0 = unchecked((int)33984),
		// GL_TEXTURE1 = 0x84C1
		// GL_TEXTURE1_ARB = 0x84C1
		Texture1 = unchecked((int)33985),
		// GL_TEXTURE2 = 0x84C2
		// GL_TEXTURE2_ARB = 0x84C2
		Texture2 = unchecked((int)33986),
		// GL_TEXTURE3 = 0x84C3
		// GL_TEXTURE3_ARB = 0x84C3
		Texture3 = unchecked((int)33987),
		// GL_TEXTURE4 = 0x84C4
		// GL_TEXTURE4_ARB = 0x84C4
		Texture4 = unchecked((int)33988),
		// GL_TEXTURE5 = 0x84C5
		// GL_TEXTURE5_ARB = 0x84C5
		Texture5 = unchecked((int)33989),
		// GL_TEXTURE6 = 0x84C6
		// GL_TEXTURE6_ARB = 0x84C6
		Texture6 = unchecked((int)33990),
		// GL_TEXTURE7 = 0x84C7
		// GL_TEXTURE7_ARB = 0x84C7
		Texture7 = unchecked((int)33991),
		// GL_TEXTURE8 = 0x84C8
		// GL_TEXTURE8_ARB = 0x84C8
		Texture8 = unchecked((int)33992),
		// GL_TEXTURE9 = 0x84C9
		// GL_TEXTURE9_ARB = 0x84C9
		Texture9 = unchecked((int)33993),
		// GL_TEXTURE10 = 0x84CA
		// GL_TEXTURE10_ARB = 0x84CA
		Texture10 = unchecked((int)33994),
		// GL_TEXTURE11 = 0x84CB
		// GL_TEXTURE11_ARB = 0x84CB
		Texture11 = unchecked((int)33995),
		// GL_TEXTURE12 = 0x84CC
		// GL_TEXTURE12_ARB = 0x84CC
		Texture12 = unchecked((int)33996),
		// GL_TEXTURE13 = 0x84CD
		// GL_TEXTURE13_ARB = 0x84CD
		Texture13 = unchecked((int)33997),
		// GL_TEXTURE14 = 0x84CE
		// GL_TEXTURE14_ARB = 0x84CE
		Texture14 = unchecked((int)33998),
		// GL_TEXTURE15 = 0x84CF
		// GL_TEXTURE15_ARB = 0x84CF
		Texture15 = unchecked((int)33999),
		// GL_TEXTURE16 = 0x84D0
		// GL_TEXTURE16_ARB = 0x84D0
		Texture16 = unchecked((int)34000),
		// GL_TEXTURE17 = 0x84D1
		// GL_TEXTURE17_ARB = 0x84D1
		Texture17 = unchecked((int)34001),
		// GL_TEXTURE18 = 0x84D2
		// GL_TEXTURE18_ARB = 0x84D2
		Texture18 = unchecked((int)34002),
		// GL_TEXTURE19 = 0x84D3
		// GL_TEXTURE19_ARB = 0x84D3
		Texture19 = unchecked((int)34003),
		// GL_TEXTURE20 = 0x84D4
		// GL_TEXTURE20_ARB = 0x84D4
		Texture20 = unchecked((int)34004),
		// GL_TEXTURE21 = 0x84D5
		// GL_TEXTURE21_ARB = 0x84D5
		Texture21 = unchecked((int)34005),
		// GL_TEXTURE22 = 0x84D6
		// GL_TEXTURE22_ARB = 0x84D6
		Texture22 = unchecked((int)34006),
		// GL_TEXTURE23 = 0x84D7
		// GL_TEXTURE23_ARB = 0x84D7
		Texture23 = unchecked((int)34007),
		// GL_TEXTURE24 = 0x84D8
		// GL_TEXTURE24_ARB = 0x84D8
		Texture24 = unchecked((int)34008),
		// GL_TEXTURE25 = 0x84D9
		// GL_TEXTURE25_ARB = 0x84D9
		Texture25 = unchecked((int)34009),
		// GL_TEXTURE26 = 0x84DA
		// GL_TEXTURE26_ARB = 0x84DA
		Texture26 = unchecked((int)34010),
		// GL_TEXTURE27 = 0x84DB
		// GL_TEXTURE27_ARB = 0x84DB
		Texture27 = unchecked((int)34011),
		// GL_TEXTURE28 = 0x84DC
		// GL_TEXTURE28_ARB = 0x84DC
		Texture28 = unchecked((int)34012),
		// GL_TEXTURE29 = 0x84DD
		// GL_TEXTURE29_ARB = 0x84DD
		Texture29 = unchecked((int)34013),
		// GL_TEXTURE30 = 0x84DE
		// GL_TEXTURE30_ARB = 0x84DE
		Texture30 = unchecked((int)34014),
		// GL_TEXTURE31 = 0x84DF
		// GL_TEXTURE31_ARB = 0x84DF
		Texture31 = unchecked((int)34015),
	}
	public enum VertexPointerType
	{
		// GL_SHORT = 0x1402
		Short = unchecked((int)5122),
		// GL_INT = 0x1404
		Int = unchecked((int)5124),
		// GL_FLOAT = 0x1406
		Float = unchecked((int)5126),
		// GL_DOUBLE = 0x140A
		Double = unchecked((int)5130),
	}
}

